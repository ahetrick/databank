.bs-callout.bs-callout-info.idb-help(id="api_upload_complex")
  %br
  %hr
  %h1 Complex File Upload Protocol
  %hr
  %p
    The
    %a(href="#api_upload_complex" )complex
    protocol requires several coordinated calls, but supports files
    %em up to 2TB
    in size, to an existing draft dataset with an authentication token and dataset key as described in the
    =succeed(".") do
      %a(href="#top") overview
  %p
    The basic URL pattern is
    = %Q[#{IDB_CONFIG[:root_url_text]}/api/dataset/[dataset key]/datafile]
  %p The request method is POST.
  %p
    %strong The authorization token must be sent in a header in each call.
  %p The file is transferred in a series of byte chunks in a form, each a separate call in an element named bytechunk.
  %p Coordinated calls are sent in three phases, each with distinct required elements:
  %ol
    %li
      %h3 setup
      %p The setup phase prepares Illinois Data Bank for the file transfer.
      %p Sending a new setup call will start over, removing any progress from any previous attempts to upload a file of the same name for the same dataset.
      %p
        %strong Required Data Elements:
        %ul
          %li
            %p
              %em phase:
              must be "setup"
          %li
            %p
              %em filesize:
              number of bytes to be expected in the whole file - max 2199023255552 (2TB)
          %li
            %p
              %em filename:
              just the leaf base name and file extension.
            %p This will be the filename within Illinois Data Bank.
            %p This becomes an identifier for the file during the transfer phase, and must be the same for each subsequent call.

      %h3 Example cURL command for setup phase of complex protocol:
      %pre
        %code
          = %Q[curl -d phase=setup -d -d filesize=10737418240 filename=my_datafile.csv -H "Authorization: Token token=authentication_token" -X POST #{IDB_CONFIG[:root_url_text]}/api/dataset/dataset_key/datafile]
          -if IDB_CONFIG[:root_url_text].include?("dev")
            = %Q[-k]
    %li
      %h3 transfer
      %p The transfer phase sends bytechunks in a series of calls.
      %p
        %strong Required Data Elements (for each):
        %ul
          %li
            %p
              %em phase:
              must be "transfer"
          %li
            %p
              %em filename:
              just the leaf base name and file extension - the same one that was used in setup phase.
          %li
            %p
              %em previous_size:
              the number of bytes that were sent
              %strong before
              this chunk, used to confirm order
          %li
            %p
              %em bytechunk:
              the bytes being sent in this file transfer call
            %p The size of the bytechunk is flexible.  It can be up to 4GB, but smaller chunks will be more tolerant of variable connections.

        %h3 Example cURL command for transfer phase of complex protocol:
        %pre
          %code
            = %Q[curl -d phase=setup -d filename=my_datafile.csv -F "bytechunk=my_bytechunk" -H "Authorization: Token token=authentication_token" -H "Transfer-Encoding: chunked" -X POST #{IDB_CONFIG[:root_url_text]}/api/dataset/dataset_key/datafile]
            -if IDB_CONFIG[:root_url_text].include?("dev")
              = %Q[-k]

    %li
      %h3 verify
      %p The verify phase confirms that the complete file was transferred successfully, and processes the file for inclusion in the dataset.
      %p
        %strong Required Data Elements:
        %ul
          %li
            %p
              %em phase:
              must be "verify"
          %li
            %p
              %em filename:
              just the leaf base name and file extension - the same one that was used in setup phase.
          %li
            %p
              %em checksum:
              the MD5 hash for the original file, to be used to verify complete file transfer.

      %h3 Example cURL command for verify phase of complex protocol:
      %pre
        %code
          = %Q[curl curl -d phase=verify -d filename=my_datafile.csv -d checksum=my_md5_hash -H "Authorization: Token token=authentication_token" -H "Transfer-Encoding: chunked" -X POST #{IDB_CONFIG[:root_url_text]}/api/dataset/dataset_key/datafile]
          -if IDB_CONFIG[:root_url_text].include?("dev")
            = %Q[-k]

  %p After upload is complete, refresh the dataset page to see the new datafile listing.

  %p
    Example python client program can be downloaded from
    =succeed(".") do
      %a(href="https://github.com/medusa-project/databank-client" ) https://github.com/medusa-project/databank-client
