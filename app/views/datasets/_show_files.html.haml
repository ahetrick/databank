.dataset-files
  .panel-group(id="files" role="tablist" aria-multiselectable="true")
    .panel.panel-default
      .panel-heading(role="tab" id="headingOne")
        %h4.panel-title
          %a(role="button" data-toggle="collapse" data-parent="#files" href="#collapseOne" aria-expanded="true" aria-controls="collapseOne" class="accordion-toggle")
            %span(class="metadata-label") Files
      %div(class="panel-collapse.collapse.in" id="collapseOne" role="tabpanel" aria-labelledby="headingOne")
        .panel-body

          =render partial: 'file_restriction_alert', locals: {dataset: dataset}

          -if (can? :manage, dataset) || ((can? :edit, dataset) && (dataset.publication_state != Databank::PublicationState::PermSuppress::FILE)) || ((dataset.publication_state == Databank::PublicationState::RELEASED) && (dataset.hold_state != Databank::PublicationState::TempSuppress::FILE))
            %form(role="form" id="select-files-form")
              .form-group(id="select-files-form-group")
                %table(id="show-files-table" class="table table-striped")
                  %tbody
                    -if dataset.fileset_preserved? || (dataset.total_filesize && (dataset.total_filesize < Dataset.local_zip_max_size))
                      %tr.row
                        %td
                          .row
                            .col-md-4
                              -if dataset.fileset_preserved?
                                %button(class="btn btn-primary" type="button" onclick="offerDownloadLink()")
                                  %span.glyphicon.glyphicon-download
                                  Get Custom Zip and Download Link for Selected
                                  %span.checkFileSelectedCount

                              -else
                                %button(class="btn btn-primary" type="submit")
                                  %span.glyphicon.glyphicon-download
                                  Zip and Download Selected
                                  %span.checkFileSelectedCount

                          .row
                            .checkbox.col-md-4
                              %label
                                %input(type="checkbox" id="checkAllFiles" value="checkAllFiles")
                                Select all
                                ="(#{dataset.datafiles.count})"

                    -if dataset.ordered_datafiles

                      - dataset.ordered_datafiles.each do |datafile|
                        -if (datafile.bytestream_size > 0) && (datafile.job_status == :complete) && ((datafile.binary && datafile.binary.file) || (datafile.medusa_path && datafile.medusa_path != ""))
                          %tr.row
                            %td
                              .row.checkbox

                                %span.col-md-6
                                  -if dataset.fileset_preserved? || dataset.total_filesize < Dataset.local_zip_max_size
                                    %label
                                      %input(type="checkbox" class="checkFile checkFileGroup" name="selected_files[]" value="#{datafile.web_id}" onchange="handleCheckFileGroupChange()")
                                      = datafile.bytestream_name
                                  -else
                                    = datafile.bytestream_name

                                %span.col-md-2
                                  = number_to_human_size(datafile.bytestream_size)

                                %span.col-md-2

                                  -if datafile.has_preview?
                                    %span(id="preview_btn_#{datafile.web_id}")
                                      %button(type='button' class='btn btn-sm btn-success' onclick='preview("#{datafile.web_id}")')
                                        %span.glyphicon.glyphicon-eye-open
                                        View

                                  -elsif datafile.is_image?
                                    %span(id="preview_img_btn_#{datafile.web_id}")
                                      %button(type='button' class='btn btn-sm btn-success' onclick='preview_image("#{IDB_CONFIG[:iiif_root]}","#{datafile.web_id}")')
                                        %span.glyphicon.glyphicon-eye-open
                                        View

                                  -elsif datafile.mime_type && datafile.mime_type == 'application/pdf'
                                    %span(id="preview_btn_#{datafile.web_id}")
                                      %a(href="/datafiles/#{datafile.web_id}/display" target="_blank" class="btn btn-sm btn-success idb")
                                        %span.glyphicon.glyphicon-eye-open
                                        View
                                  -elsif datafile.is_microsoft?
                                    %span(id="preview_btn_#{datafile.web_id}")
                                      %a(href="#{datafile.microsoft_preview_url}" target="_blank" class="btn btn-sm btn-success idb")
                                        %span.glyphicon.glyphicon-eye-open
                                        View

                                %span.col-md-2
                                  %a(href="/datafiles/#{datafile.web_id}/download" class="btn btn-primary btn-sm idb" )
                                    %span.glyphicon.glyphicon-download
                                    File

                              .row(id="preview_#{datafile.web_id}")
                              .row.loading.text-center
                                %i(class="fa fa-spinner fa-spin fa-4x view-load-spinner spinner_#{datafile.web_id}" )
